# This workflow builds changes to develop branch and commits to website repo

name: Generate website

on:
  push:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DITA_OT_VERSION: '3.5.1'
      WEBSITE_BRANCH: 'master'
      WEBSITE_PLUGIN_BRANCH: 'master'
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set Node.js version 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Set up Netlify
        uses: actions/checkout@master
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Check out docs
        uses: actions/checkout@v2
      - name: Check out website
        uses: actions/checkout@v2
        with:
          repository: dita-ot/website
          ref: ${{ env.WEBSITE_BRANCH }}
          path: website

      - name: Download website plug-in
        run: |
          curl -sL https://github.com/dita-ot/org.dita-ot.html/archive/refs/heads/${{ env.WEBSITE_PLUGIN_BRANCH }}.zip -o org.dita-ot.html.zip
      - name: Cache stable DITA-OT
        uses: actions/cache@v2
        with:
          path: dita-ot-${{ env.DITA_OT_VERSION }}
          key: ${{ runner.os }}-dita-ot-${{ env.DITA_OT_VERSION }}

      - name: Download stable DITA-OT
        run: |
          if [ ! -d "dita-ot-${{ env.DITA_OT_VERSION }}" ]; then
            curl -sL https://github.com/dita-ot/dita-ot/releases/download/${{ env.DITA_OT_VERSION }}/dita-ot-${{ env.DITA_OT_VERSION }}.zip -o dita-ot-${{ env.DITA_OT_VERSION }}.zip
            unzip dita-ot-${{ env.DITA_OT_VERSION }}.zip
          else
            echo "Use cached dita-ot-${{ env.DITA_OT_VERSION }}"
          fi
          dita-ot-${{ env.DITA_OT_VERSION }}/bin/dita install org.dita-ot.html.zip --force -v

      - name: Get develop DITA-OT ETag
        run: |
          curl -sI https://s3-eu-west-1.amazonaws.com/dita-ot/dita-ot-develop.zip | grep -F ETag | cut -d'"' -f 2 > dita-ot-develop.etag
      - name: Cache develop DITA-OT
        uses: actions/cache@v2
        with:
          path: dita-ot-develop
          key: ${{ runner.os }}-dita-ot-develop-${{ hashFiles('dita-ot-develop.etag') }}
          restore-keys: |
            ${{ runner.os }}-dita-ot-develop-

      - name: Download develop DITA-OT
        run: |
          if [ ! -d "dita-ot-develop" ]; then
            curl -sL https://s3-eu-west-1.amazonaws.com/dita-ot/dita-ot-develop.zip -o dita-ot-develop.zip
            unzip dita-ot-develop.zip -d dita-ot-develop
          else
            echo "Use cached dita-ot-develop"
          fi
          echo "DITA_OT_DEV=$(find dita-ot-develop -name 'dita-ot-*@*' -type d | head -1)" >> $GITHUB_ENV

      - name: Clean output
        run: |
          # Remove target output directory before generating new output
          for i in `find "$SITE_DIR/dev" -type f`; do
            if grep -q 'Generated from DITA source' "$i"; then
              echo "Skip generated file $i"
            elif grep -q 'generated: true' "$i"; then
              echo "Skip generated file $i"
            else
              rm "$i"
            fi
          done
        env:
          SITE_DIR: ${{ github.workspace }}/website

      - name: Run DITA-OT
        run: |
          ./gradlew site -PditaHome=${{ github.workspace }}/dita-ot-${{ env.DITA_OT_VERSION }} -PoutputDir=${{ github.workspace }}/website/dev -PditaHomeSrc=${{ env.DITA_OT_DEV }} --info --stacktrace --no-daemon

      - name: Reset unchanged
        working-directory: ${{ github.workspace }}/website
        run: |
          ruby ${{ github.workspace }}/.github/workflows/clean.rb

      - name: Push website
        working-directory: ${{ github.workspace }}/website
        run: |
          git config user.email "ditaotbot@gmail.com"
          git config user.name "DITA-OT Bot"
          git add --all
          # Commit generated site output
          git commit -a -m "Deploy dita-ot/docs@${COMMIT:0:7} to 'dev' docs"
          # push
          git remote set-url --push origin https://${COMMITTER_USERNAME}:${COMMITTER_TOKEN}@github.com/dita-ot/website
          git push -v origin master
        env:
          COMMITTER_USERNAME: dita-ot-bot
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
          COMMIT: ${{ env.GITHUB_SHA }}
