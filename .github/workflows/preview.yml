# This workflow will build PR changes and push to website repo

name: DITA-OT CI for website preview

on:
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      DITA_OT_VERSION: "3.5.1"

    steps:
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set Node.js version 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Set up Netflify
      uses: actions/checkout@master
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Checkout docs
      uses: actions/checkout@v2
    - name: Checkout website
      uses: actions/checkout@v2
      with:
        repository: dita-ot/website
        path: website

    - name: Download stable DITA-OT
      run: |
        curl -L https://github.com/dita-ot/dita-ot/releases/download/${{ env.DITA_OT_VERSION }}/dita-ot-${{ env.DITA_OT_VERSION }}.zip -o dita-ot-${{ env.DITA_OT_VERSION }}.zip
        unzip dita-ot-${{ env.DITA_OT_VERSION }}.zip
        dita-ot-${{ env.DITA_OT_VERSION }}/bin/dita install https://github.com/dita-ot/org.dita-ot.html/archive/master.zip -v
    - name: Download develop DITA-OT
      run: |
        curl -L https://s3-eu-west-1.amazonaws.com/dita-ot/dita-ot-develop.zip -o dita-ot-develop.zip
        unzip dita-ot-develop.zip
        echo "::set-env name=DITA_OT_DEV::$(find $PWD -name 'dita-ot-*+*' -type d | head -1)"                
    
    - name: Run DITA-OT
      run: |
        ./gradlew site -PditaHome=${{ github.workspace }}/dita-ot-${{ env.DITA_OT_VERSION }} -PoutputDir=${{ github.workspace }}/website/dev -PditaHomeSrc=${{ env.DITA_OT_DEV }} --info --stacktrace --no-daemon

    - name: Build website
      run: |
        cd ${{ github.workspace }}/website && npm ci && npm run install
        cd ${{ github.workspace }}
        echo "::set-env name=PR_ID::$(echo $GITHUB_REF |  cut -d'/' -f 3 )"
        
    - name: Move website
      run: |
        mv -f ${{ github.workspace }}/website/* ${{ github.workspace }}/
        rm -fr build
    # Use GitHub Actions' cache to shorten build times and decrease load on servers
    #- uses: actions/cache@v1
    #  with:
    #    path: vendor/bundle
    #    key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
    #    restore-keys: |
    #      ${{ runner.os }}-gems-
    #- name: Run Jekyll
    #  uses: helaili/jekyll-action@2.0.1
    #  with:
    #    jekyll_src: /github/workspace/website

    - name: Cache gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install Jekyll
      run: |
        bundle config path vendor/bundle
        gem install jekyll
        bundle install
    - name: Run Jekyll
      run: |
        bundle exec jekyll build

    - name: Deploy to Netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir _site --alias "preview-pr-${{ env.PR_ID }}"
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
